name: CD

# activate when pushed to master branch
on:
  push:
    branches: [master]

jobs:
  build:
    name: build & upload to s3
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_S3_REGION }}

      ## create application.properties
      - name: make application-prod.properties
        run: touch ./src/main/resources/application-prod.properties
        shell: bash

      - name: deliver application-prod.properties
        run: echo "${{ secrets.PROPERTIES }}" > ./src/main/resources/application-prod.properties
        shell: bash

      # build spring boot project
      - name: build
        run: ./gradlew build
        # env for data
        env:
          DATASOURCE_URL: ${{ secrets.DATASOURCE_URL }}
          DATASOURCE_ID: ${{ secrets.DATASOURCE_ID }}
          DATASOURCE_PASSWORD: ${{ secrets.DATASOURCE_PASSWORD }}

      # compress to zip file to upload to S3
      - name: compress files for deploy
        run: zip -r demar-server.zip build/libs appspec.yml scripts

      # upload to s3
      - name: upload to s3
        run: aws s3 cp demar-server.zip s3://${{ secrets.AWS_S3_BUCKET }}

  # jobs for CodeDeploy to do
  deploy:
    needs: build
    name: deploy to ec2
    runs-on: ubuntu-latest

    steps:
      # login in AWS
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_S3_REGION }}
      # process deploy
      - name: deploy
        run: aws deploy create-deployment --application-name Demar-server --deployment-config-name CodeDeployDefault.OneAtATime --deployment-group-name DemarServerDeployGroup --s3-location bucket=${{ secrets.AWS_S3_BUCKET }},bundleType=zip,key=demar-server.zip --region ${{ secrets.AWS_S3_REGION }} --file-exists-behavior OVERWRITE